"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),c=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={id:"Introduction v0",sidebar_position:1,slug:"Introduction",sidebar_label:"\ud83d\udc4b Introduction"},i="Introduction",l={unversionedId:"Introduction v0",id:"Introduction v0",title:"Introduction",description:"Get started by creating a new site.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/Introduction",permalink:"/commune-ai.github.io/docs/next/Introduction",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"Introduction v0",sidebar_position:1,slug:"Introduction",sidebar_label:"\ud83d\udc4b Introduction"},sidebar:"tutorialSidebar",next:{title:"\ud83d\udd3d Installation",permalink:"/commune-ai.github.io/docs/next/installation"}},u={},c=[],s={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Get started by ",(0,r.kt)("strong",{parentName:"p"},"creating a new site"),"."),(0,r.kt)("p",null,"Or ",(0,r.kt)("strong",{parentName:"p"},"try Docusaurus immediately")," with ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://docusaurus.new"},"docusaurus.new")),"."),(0,r.kt)("h1",{id:"create-a-module"},"Create a Module"),(0,r.kt)("p",null,"A module is class that forms the backbone of commune. It consists of a set of helper functions that are useful to the developer.  For example, if you want to load a JSON, you will need to setup the environment and have several steps."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import json\n\n# Specify the path to your JSON file\nfile_path = 'path/to/your/file.json'\n\n# Open the JSON file\nwith open(file_path, 'r') as file:\n    # Load the JSON data\n    data = json.load(file)\n\n\n")),(0,r.kt)("p",null," After you create , you can put it as a function that you can reuse for later. The module essentially consists of functions that the developer can reuse "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="commune/module/module.py"',title:'"commune/module/module.py"'},"\n# In commune/module/module.py\nclass Module:\n  ...\n  def load_json(file_path:str)\n    import json\n    with open(file_path, 'r') as file:\n        # Load the JSON data\n        data = json.load(file)\n    return data\n  ...\n\n")),(0,r.kt)("p",null,"This function will be added to the module and the command line automatically such that you can now import a json as follows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\nimport commune as c\nc.load_json('path/to/your/file.json')\n\n")))}d.isMDXComponent=!0}}]);